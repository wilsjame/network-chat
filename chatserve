#!/usr/bin/env python3
#/*********************************************************************
#** Author: James G Wilson
#** Date: 5/6/2018
#** Description: chatserve.py 
#**              Use in conjuction with chatclient.c. This is the 
#**		 server side of a simple chat program that uses TCP
#**		 sockets to communicate over the network. 
#*********************************************************************/
import sys

# Access socket methods without having to prepend 'socket.'
from socket import * 

def main():

	# Check for correct command line syntax
	if len(sys.argv) != 2:
		print('Usage ./chatserve <port#>')
		sys.exit()

	# Hard code server's handle.
	handle = 'Server> '

	serverSocket = start_up()

	# Keep server alive until SIGINT received.
	while True:
		
		# Wait for client to come knocking.
		print('Server is listening on port: ' + sys.argv[1])
		connectionSocket, addr = serverSocket.accept()

		# Keep chat session alive until someone quits
		while True:

			# Receive message.
			receivedMsg = receive_message(connectionSocket)

			if '\quit' in receivedMsg:
				break

			print(receivedMsg)

			# Send message.
			sentMsg = send_message(connectionSocket, handle)

			if '\quit' in sentMsg:
				break

		connectionSocket.close()
		        			
# Set up server by returning a listening socket for a client to contact.
def start_up():

	# Create IPv6 TCP listening socket.
	# Bind port # with listening socket.
	serverSocket = socket(AF_INET6, SOCK_STREAM)
	serverSocket.bind(('', int(sys.argv[1])))

	# Start listening with backlog = 1.
	serverSocket.listen(1)
	
	return serverSocket

# Send a message to the client and 
# return that message.
def send_message(connectionSocket, handle):
	message = handle + input('>> ')
	connectionSocket.send(message.encode())

	return message

# Receive a message from the client and 
# and return that message.
def receive_message(connectionSocket):
	clientMessage = connectionSocket.recv(1024);

	return clientMessage.decode()
				
if __name__ == "__main__":

	# execute only if run as a script
	main()

